{"version":3,"sources":["01.svg","App.js","reportWebVitals.js","index.js"],"names":["App","res","useState","calculate","setCalculate","loading","setLoading","firstName","setFirstName","secondName","setSecondName","percentage","setpercentage","line","setLine","options","method","url","params","fname","sname","headers","className","onSubmit","e","preventDefault","axios","request","then","response","data","result","catch","error","console","type","name","value","onChange","target","placeholder","required","animation","src","image","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,G,MAAA,IAA0B,gC,gCC2E1BA,MArEf,WACE,IAgBIC,EAhBJ,EAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAoCR,mBAAS,GAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAAwBV,mBAAS,IAAjC,mBAAOW,EAAP,KAAaC,EAAb,KAEMC,EAAU,CACdC,OAAQ,MACRC,IAAK,uDACLC,OAAQ,CAAEC,MAAOZ,EAAWa,MAAOX,GACnCY,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,mCA6BvB,OACE,qCACE,uBAAMC,UAAU,OAAOC,SA3BN,SAACC,GACpBA,EAAEC,iBACiBrB,EAAJ,IAAdD,EAA+B,EAAkBA,EAAY,GAC9DuB,IAAMC,QAAQZ,GAASa,MAAK,SAAUC,GACpC5B,EAAM4B,EAASC,KACflB,EAAcX,EAAIU,YAClBG,EAAQb,EAAI8B,QACZzB,GAAW,MACV0B,OAAM,SAAUC,GACjBC,QAAQD,MAAMA,OAkBd,UACE,sBAAKX,UAAU,SAAf,UACE,uBAAOa,KAAK,OAAOb,UAAU,aAAac,KAAK,QAAQC,MAAO9B,EAAW+B,SAjBvD,SAACd,GACzBhB,EAAagB,EAAEe,OAAOF,OACtBjC,EAAa,GACbE,GAAW,IAciGkC,YAAY,YAAYC,UAAQ,IACtI,uBAAON,KAAK,OAAOb,UAAU,aAAac,KAAK,SAASC,MAAO5B,EAAY6B,SAbxD,SAACd,GAC1Bd,EAAcc,EAAEe,OAAOF,OACvBjC,EAAa,GACbE,GAAW,IAUoGkC,YAAY,gBAAgBC,UAAQ,OAE/I,qBAAKnB,UAAU,SAAf,SACE,uBAAOa,KAAK,SAASE,MAAM,YAAYf,UAAU,cAGrD,qBAAKA,WAA0B,IAAdnB,EAAkB,YAAc,IAAM,WAAvD,SACIE,EAOM,cAAC,IAAD,CAAwBqC,UAAU,SAP7B,qCACX,4DAA8B,uBAA9B,IAAqC,4BAAInC,IAAzC,QAA4D,4BAAIE,OAChE,sBAAKa,UAAU,WAAf,UACE,qBAAKqB,IAAKC,EAAOtB,UAAU,WAAWuB,IAAI,SAC1C,+BAAKlC,EAAL,UAEF,6BAAKE,aCvDAiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.982c659f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/01.804d5f0e.svg\";","import './App.css';\nimport image from './01.svg';\nimport { useState } from 'react';\nimport axios from \"axios\";\nimport * as  ReactBootStrap from 'react-bootstrap';\n\nfunction App() {\n  const [calculate, setCalculate] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [firstName, setFirstName] = useState(\"\");\n  const [secondName, setSecondName] = useState(\"\");\n  const [percentage, setpercentage] = useState(0);\n  const [line, setLine] = useState(\"\");\n\n  const options = {\n    method: 'GET',\n    url: 'https://love-calculator.p.rapidapi.com/getPercentage',\n    params: { fname: firstName, sname: secondName },\n    headers: {\n      'x-rapidapi-key': '2e5ea184f8msh86b539fc9be346cp11c702jsn0b84df9da077',\n      'x-rapidapi-host': 'love-calculator.p.rapidapi.com'\n    }\n  };\n  var res;\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    (calculate === 0 ? setCalculate(1) : setCalculate(calculate + 1));\n    axios.request(options).then(function (response) {\n      res = response.data;\n      setpercentage(res.percentage);\n      setLine(res.result);\n      setLoading(false);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n  const handleFirstChange = (e) => {\n    setFirstName(e.target.value);\n    setCalculate(0);\n    setLoading(true);\n  }\n  const handleSecondChange = (e) => {\n    setSecondName(e.target.value);\n    setCalculate(0);\n    setLoading(true);\n  }\n\n\n\n  return (\n    <>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"fields\">\n          <input type=\"text\" className=\"form-field\" name=\"first\" value={firstName} onChange={handleFirstChange} placeholder=\"Your Name\" required />\n          <input type=\"text\" className=\"form-field\" name=\"second\" value={secondName} onChange={handleSecondChange} placeholder=\"Partners Name\" required />\n        </div>\n        <div className=\"button\">\n          <input type=\"submit\" value=\"Calculate\" className=\"calc\" />\n        </div>\n      </form>\n      <div className={(calculate === 0 ? \"invisible\" : \"\") + \" results\"}>\n        {!loading ? (<>\n          <p>Percentage of Love between <br /> <b>{firstName}</b> And <b>{secondName}</b></p>\n          <div className=\"love-per\">\n            <img src={image} className=\"love-svg\" alt=\"love\" />\n            <h2>{percentage}%</h2>\n          </div>\n          <h1>{line}</h1>\n        </>) : (<ReactBootStrap.Spinner animation=\"grow\" />)}\n\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}